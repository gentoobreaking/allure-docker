<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.jira.JiraProjectProperty plugin="jira@3.1.3"/>
    <jenkins.branch.RateLimitBranchProperty_-JobPropertyImpl plugin="branch-api@2.6.1">
      <durationName>minute</durationName>
      <count>1</count>
      <userBoost>false</userBoost>
    </jenkins.branch.RateLimitBranchProperty_-JobPropertyImpl>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>TZ=Asia/Taipei
1-59/15 * * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.build__timeout.BuildStepWithTimeout plugin="build-timeout@1.20">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>15</timeoutMinutes>
      </strategy>
      <buildStep class="hudson.tasks.Shell">
        <command>#!/bin/bash

echo &quot; - JOB Name:${JOB_NAME}&quot;
export timestamp=$(date &quot;+%Y%m%d_%H%M&quot;)
export postman_name=&quot;$(echo ${JOB_NAME}|sed &apos;s|allure_||g&apos;)&quot;
export collection_name=&quot;${postman_name}_c.json&quot;
export env_name=&quot;${postman_name}_env.json&quot;
export report_name=&quot;${postman_name}.html&quot;

export report_cli_url=&quot;${BUILD_URL}/consoleText&quot;
export report_cli_local=&quot;${JENKINS_HOME}/jobs/${JOB_NAME}/builds/${BUILD_NUMBER}/log&quot;

echo &quot; - Postman name:${postman_name}&quot;
echo &quot; - Collection filename:${collection_name}&quot;
echo &quot; - Env filename:${env_name}&quot;
echo &quot; - Report filename:${report_name}&quot;
echo &quot; - CLI report url:${report_cli_url}&quot;
echo &quot; - CLI report local:${report_cli_local}&quot;
export allure_results_folder=&quot;/opt/newman-src/reports/allure_projects/$(echo ${postman_name}|sed &apos;s|_|-|g&apos;|sed &apos;s|\.|-|g&apos;)/results&quot;
export allure_reports_folder=&quot;/opt/newman-src/reports/allure_projects/$(echo ${postman_name}|sed &apos;s|_|-|g&apos;|sed &apos;s|\.|-|g&apos;)/reports&quot;

echo &quot; - allure_results_folder:${allure_results_folder}&quot;
echo &quot; - allure_reports_folder:${allure_reports_folder}&quot;

[ ! -d &quot;${allure_results_folder}&quot; ] &amp;&amp; mkdir -p &quot;${allure_results_folder}&quot;
[ ! -d &quot;${allure_reports_folder}&quot; ] &amp;&amp; mkdir -p &quot;${allure_reports_folder}&quot;

sudo docker run -v /opt/newman-src:/etc/newman -v &quot;${allure_results_folder}&quot;:/opt/allure-results \
--name &quot;${JOB_NAME}&quot; --rm postman_checks:v0.5 \
run &quot;/etc/newman/${collection_name}&quot; -e &quot;/etc/newman/environments/${env_name}&quot; \
-r allure \
--reporter-allure-export /opt/allure-results

echo &quot; - send slack&quot;

#export my_public_ip=&quot;$(curl -s v4.ifconfig.co)&quot;
export my_public_ip=&quot;52.194.85.24&quot;
export my_public_url=&quot;${my_public_ip}:8888&quot;
export my_report_url=&quot;http://${my_public_url}/${postman_name}_${timestamp}.html&quot;


export brand_name=&quot;$(echo ${JOB_NAME}|awk -F&apos;_&apos; &apos;{print $2}&apos;)&quot;
echo &quot; - brand name:${brand_name}&quot;
export webhook=&quot;$(cat /opt/newman-src/monitor.list|grep ${brand_name}|awk &apos;{print $2}&apos;)&quot;
echo &quot; - webhook:${webhook}&quot;

#curl -s -X POST --data-urlencode &apos;payload={&quot;text&quot;: &quot;&apos;&quot;${postman_name}&quot;&apos; &lt;&apos;&quot;${my_report_url}&quot;&apos; |Click here&gt; for details! :```&apos;&quot;${report_output}&quot;&apos;```&quot;}&apos; &quot;${webhook}&quot;

[ ! -d ./allure-results ] &amp;&amp; ln -s &quot;${allure_results_folder}&quot; ./allure-results
[ -d ./allure-report ] &amp;&amp; rm -rf ./allure-report
[ -d ./allure-results/history ] &amp;&amp; rm -f ./allure-results/history/*.json

echo &quot; - Finish&quot;

# --- END --- #</command>
        <configuredLocalRules/>
      </buildStep>
      <operationList class="empty-list"/>
    </hudson.plugins.build__timeout.BuildStepWithTimeout>
  </builders>
  <publishers>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.8">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>aborted</logText>
              <operator>OR</operator>
            </hudson.plugins.postbuildtask.LogProperties>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>ABORTED</logText>
              <operator>OR</operator>
            </hudson.plugins.postbuildtask.LogProperties>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText>Build timed out</logText>
              <operator>OR</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>false</RunIfJobSuccessful>
          <script>#!/bin/bash&#xd;
&#xd;
if [ $(sudo docker ps -a|grep -c &quot;${JOB_NAME}&quot;) == &quot;1&quot; ]&#xd;
then&#xd;
    sudo docker stop -v --name &quot;${JOB_NAME}&quot;&#xd;
else&#xd;
    echo &quot; - clean for container:${JOB_NAME}&quot;&#xd;
fi&#xd;
&#xd;
# --- END --- #</script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <ru.yandex.qatools.allure.jenkins.AllureReportPublisher plugin="allure-jenkins-plugin@2.28.1">
      <configPath>config.yml</configPath>
      <jdk></jdk>
      <properties/>
      <results>
        <ru.yandex.qatools.allure.jenkins.config.ResultsConfig>
          <path>allure-results</path>
        </ru.yandex.qatools.allure.jenkins.config.ResultsConfig>
      </results>
      <reportBuildPolicy>ALWAYS</reportBuildPolicy>
      <includeProperties>true</includeProperties>
      <disabled>false</disabled>
      <report>allure-report</report>
    </ru.yandex.qatools.allure.jenkins.AllureReportPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.20">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>20</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.AbortOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.7.3">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.11.8"/>
  </buildWrappers>
</project>